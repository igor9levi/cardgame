let list = [1,2,3,4];  // player list - set it to be immutable
let numRounds = 10;  // broj karata
var numPlayers = list.length;  // player number list.length
let scores = {1: {score: 0}, 2: {score: 0}, 3: {score: 0}, 4: {score: 0},};
// let scores = [{score: 0}, {score: 0}, {score: 0}, {score: 0}]
const humanPlayerIndex = 1;
function* paceMaker() {
  while(true){
    yield;
  }
}

var gen = paceMaker();

function shift(list) {
  return list.slice(1).concat(list[0]);
}

function shiftMutable() {
  list = list.slice(1).concat(list[0]);
}

function iterate(){
  --numPlayers;
  console.log(list);
  gen.next();
  return shiftMutable();
}

function loop(){
  while(true) {
    if (numPlayers <= 0) {
      --numRounds;
      numPlayers = list.length
      console.log('Finished hand: ', numRounds)
      
      if(numRounds <= 0) {
        console.log(calculateGameWinner())
        return console.log('Game Over! ');
      }
      
      calculateRoundWinner()  // for random player to win the round
    }
    
    if (list[0] === humanPlayerIndex) {
      return
    }
    
    iterate();
  }
}

function calculateGameWinner() {
  // Todo: refactor this
  const winnerIndex = Object.keys(scores).reduce(function(player, next) {
    return  scores[next].score > scores[player].score ? next : player
  });
  // return scores[winnerIndex];
  return 'Player ' + winnerIndex + ' won!'
}

function calculateRoundWinner(){
  var random = Math.floor(Math.random() * 15 / 4) + 1
  console.log('Player ' + random + ' won the round!')
  scores[random].score = scores[random].score + 1  // do this in immutable way
  shuffle(random)
}

function shuffle(random) {
  // Todo: shuffle until radnom is on position list[0]
  while(random !== list[0]) {
    shiftMutable(list)
  }
}

function pickRandomCard() {
  const random = Math.floor(Math.random() * 100 / 10) + 1
}

function playUser(){
  iterate();
  loop();
}

function playRound(){
  if(numRounds <= 0) {
    return console.log('Game Over! ');
  }
  iterate();
  loop();
}